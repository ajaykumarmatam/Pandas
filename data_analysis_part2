
Creating DataFrame by using Dictionareies
=========================================

Each key will be created as column 

and Each element in list of dictionaly value created as one row

pd.DataFrame({"col1":[1,2,3,4,5],
              "col2":[12,13,14,15,16],
              "col3": "ajay kumar matam meen kenekal"})


col1	col2	col3
0	1	12	ajay kumar matam meen kenekal
1	2	13	ajay kumar matam meen kenekal
2	3	14	ajay kumar matam meen kenekal
3	4	15	ajay kumar matam meen kenekal
4	5	16	ajay kumar matam meen kenekal


Here I dont want store in col3 for each row as "	ajay kumar matam meen kenekal" .To split string we have to use 
split()

df=pd.DataFrame({"col1":[1,2,3,4,5],
              "col2":[12,13,14,15,16],
              "col3": "ajay kumar matam meen kenekal".split()})

df

col1	col2	col3
0	1	12	ajay
1	2	13	kumar
2	3	14	matam
3	4	15	meen
4	5	16	kenekal




REquiremnt : I want to create new column to above df and nwe column data would be square of first column 

df["col4"]=df["col1"]**2

df

col1	col2	col3	col4
0	1	12	ajay	1
1	2	13	kumar	4
2	3	14	matam	9
3	4	15	meen	16
4	5	16	kenekal	25

or by using apply function :
============================
def test(a):
    return a**2

df["col4_4]=df["col1"].apply(test)


Requirement : I want to create new column with first character of column number 3 

df["col5"]=df["col3"].str[0]

	col1	col2	col3	col4	col5
0	1	12	ajay	1	a
1	2	13	kumar	4	k
2	3	14	matam	9	m
3	4	15	meen	16	m
4	5	16	kenekal	25	k

Requirement : Create new column witj below conditon
if previous column value is a then keep a in new column other wise keep z .


By using apply function()
===========================
apply is kind of mapper and it will be applicable to each and every element available in list of column 

def test(i):
  if i=='a':
    return i
  else:
    return 'z'

df["col6"]=df['col5'].apply(test)

	col1	col2	col3	col4	col5	col6
0	1	     12	  ajay	 1	     a	   a
1	2	     13	  kumar	 4	     k	   z
2	3	     14	  matam	 9	     m	   z
3	4	     15	  meen	 16	     m	   z
4	5	     16	kenekal	    25	 k	   z



By using lambda function by avoiding external functions :
========================================================
we can use lambda function if logic is very easy

df["col6_6"]=df["col5"].apply(lambda x : 'a' if x=='a' else 'z')

	col1	col2	col3	col4	col5	col6	col6_6
0	1	12	ajay	1	a	a	a
1	2	13	kumar	4	k	z	z
2	3	14	matam	9	m	z	z
3	4	15	meen	16	m	z	z
4	5	16	kenekal	25	k	z	z



Requirement : 
-------------
Create new column with length of column 3

df["col7"]=df["col3"].apply(len)

df

col1	col2	col3	col4	col5	col6	     col6_6  col7
0	1	12	ajay	1	a	a	a	4
1	2	13	kumar	4	k	z	z	5
2	3	14	matam	9	m	z	z	5
3	4	15	meen	16	m	z	z	4
4	5	16	kenekal	25	k	z	z	7




Requireement : 
Create new column with log values of col2 

log function not available in python. 

So we have to first import math module 

import math

df["col8"]=df["col2"].apply(math.log)


col1	col2	col3	col4	col5	col6	col6_6	      col7	   col8
0	1	12	ajay	1	a	a	a	4	2.484907
1	2	13	kumar	4	k	z	z	5	2.564949
2	3	14	matam	9	m	z	z	5	2.639057
3	4	15	meen	16	m	z	z	4	2.708050
4	5	16	kenekal	25	k	z	z	7	2.772589


